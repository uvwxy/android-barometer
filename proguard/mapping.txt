de.uvwxy.barometer.BaroSettings -> de.uvwxy.barometer.a:
    float baroDiff -> a
    boolean loadedOnce -> b
    float getDiffedBaro(android.content.Context,float) -> a
    boolean loadDiff(android.content.Context) -> a
    void saveDiff(android.content.Context) -> b
    void showConfig(android.content.Context,float) -> b
    void access$0(float) -> a
    float access$1() -> a
de.uvwxy.barometer.BaroSettings$1 -> de.uvwxy.barometer.b:
    android.app.Dialog val$dialog -> a
    void onClick(android.view.View) -> onClick
de.uvwxy.barometer.BaroSettings$2 -> de.uvwxy.barometer.c:
    android.content.Context val$ctx -> a
    android.widget.EditText val$etBaroRefValue -> b
    float val$origBaro -> c
    android.widget.TextView val$tvBaroDiffValue -> d
    void onClick(android.view.View) -> onClick
de.uvwxy.barometer.BaroSettings$3 -> de.uvwxy.barometer.d:
    android.widget.EditText val$etBaroRefValue -> a
    float val$origBaro -> b
    android.content.Context val$ctx -> c
    android.app.Dialog val$dialog -> d
    void onClick(android.view.View) -> onClick
de.uvwxy.barometer.BaroSettings$4 -> de.uvwxy.barometer.e:
    android.widget.EditText val$etBaroRefValue -> a
    float val$origBaro -> b
    android.widget.TextView val$tvBaroDiffValue -> c
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
de.uvwxy.barometer.Barometer -> de.uvwxy.barometer.f:
    float degreesPerStep -> b
    float millsPerStep -> c
    float firstStepDegrees -> d
    float degreesPerMilliBar -> e
    float[] valuesMillibar -> a
    int textY -> f
    android.graphics.Bitmap face -> g
    android.graphics.Bitmap knob -> h
    android.graphics.Bitmap handle -> i
    android.graphics.Bitmap handle_memory -> j
    void loadBitmaps(android.content.Context) -> a
    float millibarToDegrees(float) -> a
    android.graphics.Bitmap drawMillisWithMemory(float,float) -> a
    android.graphics.Bitmap drawUnitsMillibar() -> a
de.uvwxy.barometer.MainActivity -> de.uvwxy.barometer.MainActivity:
    android.content.Context ctx -> b
    android.widget.RelativeLayout rlMain -> c
    android.widget.ImageView ivBaro -> d
    android.widget.TextView tvInfo -> e
    long lastTap -> f
    long tapSpeed -> g
    de.uvwxy.daisy.common.sensors.BarometerReader baroReader -> h
    de.uvwxy.barometer.Barometer baro -> i
    float oldValue -> j
    float origValue -> k
    float currentValue -> l
    boolean save -> m
    int x -> a
    de.uvwxy.daisy.common.sensors.SensorReader$SensorResultCallback cb -> n
    void initGUI() -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onResume() -> onResume
    void updateBaro() -> b
    void readValues() -> c
    void writeValues() -> d
    void access$0(de.uvwxy.barometer.MainActivity,float) -> a
    float access$1(de.uvwxy.barometer.MainActivity) -> a
    void access$2(de.uvwxy.barometer.MainActivity,float) -> b
    android.content.Context access$3(de.uvwxy.barometer.MainActivity) -> b
    boolean access$4(de.uvwxy.barometer.MainActivity) -> c
    void access$5(de.uvwxy.barometer.MainActivity,float) -> c
    void access$6(de.uvwxy.barometer.MainActivity) -> d
    void access$7(de.uvwxy.barometer.MainActivity,boolean) -> a
    de.uvwxy.barometer.Barometer access$8(de.uvwxy.barometer.MainActivity) -> e
    float access$9(de.uvwxy.barometer.MainActivity) -> f
    android.widget.ImageView access$10(de.uvwxy.barometer.MainActivity) -> g
    long access$11(de.uvwxy.barometer.MainActivity) -> h
    void access$12(de.uvwxy.barometer.MainActivity) -> i
    void access$13(de.uvwxy.barometer.MainActivity,long) -> a
    float access$14(de.uvwxy.barometer.MainActivity) -> j
de.uvwxy.barometer.MainActivity$1 -> de.uvwxy.barometer.g:
    de.uvwxy.barometer.MainActivity this$0 -> a
    void result(float[]) -> a
de.uvwxy.barometer.MainActivity$2 -> de.uvwxy.barometer.h:
    de.uvwxy.barometer.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
de.uvwxy.barometer.MainActivity$3 -> de.uvwxy.barometer.i:
    de.uvwxy.barometer.MainActivity this$0 -> a
    boolean onLongClick(android.view.View) -> onLongClick
de.uvwxy.barometer.MainActivity$4 -> de.uvwxy.barometer.j:
    de.uvwxy.barometer.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
de.uvwxy.daisy.common.filters.SensorFilter -> de.uvwxy.a.a.a.a:
    float[] nonInplaceValues -> a
    float[] filter(float[],float[]) -> a
    float[] filterImplementation(float[],float[]) -> b
de.uvwxy.daisy.common.sensors.BarometerReader -> de.uvwxy.a.a.b.a:
    void registerSensors(android.hardware.SensorEventListener,android.hardware.SensorManager) -> a
    void onSensorChanged(android.hardware.SensorEvent) -> a
    void resetVariables() -> a
    float getHeight(float) -> a
    float getHeight(float,float) -> a
    float getHeightFromDiff(float,float) -> b
de.uvwxy.daisy.common.sensors.SensorReader -> de.uvwxy.a.a.b.b:
    long millisStartup -> g
    long mRequiredMillisDuration -> h
    android.hardware.SensorManager sm -> a
    de.uvwxy.daisy.common.sensors.SensorReader$SensorResultCallback mCallbackResult -> i
    android.content.Context mCtx -> j
    de.uvwxy.daisy.common.sensors.SensorReader mThis -> b
    float[] sensorValues -> c
    java.util.ArrayList sensorBuffer -> d
    java.util.ArrayList sensorFilters -> e
    boolean dropOtherValues -> k
    android.hardware.SensorEventListener mSensorCallback -> f
    void resetMemory() -> b
    void startReading() -> c
    void updateSensorValues(float[]) -> a
    void stopReading() -> d
    void registerSensors(android.hardware.SensorEventListener,android.hardware.SensorManager) -> a
    void onSensorChanged(android.hardware.SensorEvent) -> a
    void resetVariables() -> a
de.uvwxy.daisy.common.sensors.SensorReader$1 -> de.uvwxy.a.a.b.c:
    de.uvwxy.daisy.common.sensors.SensorReader this$0 -> a
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
de.uvwxy.daisy.common.sensors.SensorReader$SensorResultCallback -> de.uvwxy.a.a.b.d:
    void result(float[]) -> a
de.uvwxy.daisy.helper.BitmapTools -> de.uvwxy.a.b.a:
    android.graphics.Bitmap$CompressFormat COMPRESS_TYPE -> a
    android.graphics.Bitmap scaleBitmap(android.graphics.Bitmap,int,int,boolean) -> a
de.uvwxy.daisy.helper.ViewTools -> de.uvwxy.a.b.b:
    boolean isFirstLaunch(android.content.Context,java.lang.String) -> a
